// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name P1VerifyIDSchema
import CoreImage
import Foundation
import Swift
import UIKit
@_hasMissingDesignatedInitializers open class Card : P1VerifyIDSchema.JsonSerializable, P1VerifyIDSchema.IdCard {
  public var cardId: Swift.String
  final public let cardType: Swift.String
  required public init(dict: [Swift.String : Any]) throws
  public func getCardData() -> [Swift.String : Swift.String]
  public func setCardData(_ data: [Swift.String : Swift.String])
  public func getCardField(for key: Swift.String) -> Swift.String?
  public func setCardField(value: Swift.String, for key: Swift.String)
  public func getCardImages() -> [UIKit.UIImage]
  public func addCardImage(_ images: UIKit.UIImage...)
  override public func toDictionary() throws -> [Swift.String : Any]
  @objc deinit
  override public init()
}
open class DriverLicense : P1VerifyIDSchema.JsonSerializable, P1VerifyIDSchema.IdCardWithFace {
  final public let cardType: Swift.String
  public var cardId: Swift.String
  public var id_face_coordinate_x: Swift.Int!, id_face_coordinate_y: Swift.Int!, id_face_width: Swift.Int!, id_face_height: Swift.Int!
  public var frontImage: UIKit.UIImage! {
    get
  }
  public init(cardId: Swift.String? = nil, firstName: Swift.String, middleName: Swift.String?, lastName: Swift.String, gender: Swift.String, addressStreet: Swift.String, addressCity: Swift.String, addressState: Swift.String, addressZip: Swift.String, country: Swift.String, issueDate: Swift.String, expirationDate: Swift.String, birthDate: Swift.String, idNumber: Swift.String, weight: Swift.String?, height: Swift.String?, hairColor: Swift.String?, eyeColor: Swift.String?)
  required convenience public init(dict: [Swift.String : Any]) throws
  public func setFrontImage(_ value: UIKit.UIImage) throws
  public func setBackImage(_ value: UIKit.UIImage)
  public func getBackImage() -> UIKit.UIImage
  public func setFirstName(_ value: Swift.String)
  public func getFirstName() -> Swift.String
  public func setMiddleName(_ value: Swift.String)
  public func getMiddleName() -> Swift.String
  public func setLastName(_ value: Swift.String)
  public func getLastName() -> Swift.String
  public func setGender(_ value: Swift.String)
  public func getGender() -> Swift.String
  public func setAddressStreet(_ value: Swift.String)
  public func getAddressStreet() -> Swift.String
  public func setAddressCity(_ value: Swift.String)
  public func getAddressCity() -> Swift.String
  public func setAddressState(_ value: Swift.String)
  public func getAddressState() -> Swift.String
  public func setAddressZip(_ value: Swift.String)
  public func getAddressZip() -> Swift.String
  public func setCountry(_ value: Swift.String)
  public func getCountry() -> Swift.String
  public func setIssueDate(_ value: Swift.String)
  public func getIssueDate() -> Swift.String
  public func setExpirationDate(_ value: Swift.String)
  public func getExpirationDate() -> Swift.String
  public func setBirthDate(_ value: Swift.String)
  public func getBirthDate() -> Swift.String
  public func setIdNumber(_ value: Swift.String)
  public func getIdNumber() -> Swift.String
  public func setWeight(_ value: Swift.String)
  public func getWeight() -> Swift.String
  public func setHeight(_ value: Swift.String)
  public func getHeight() -> Swift.String
  public func setHairColor(_ value: Swift.String)
  public func getHairColor() -> Swift.String
  public func setEyeColor(_ value: Swift.String)
  public func getEyeColor() -> Swift.String
  override public func toDictionary() throws -> [Swift.String : Any]
  @objc deinit
  override public init()
}
public protocol IdCard : P1VerifyIDSchema.JsonSerializableObject, P1VerifyIDSchema.JsonSerializableProtocol {
  var cardId: Swift.String { get set }
  var cardType: Swift.String { get }
  func getClaims() -> [Swift.String : Swift.String]
  func setCardId(_ value: Swift.String)
  func getCardId() -> Swift.String
  func getCardType() -> Swift.String
}
extension IdCard {
  public func setCardId(_ value: Swift.String)
  public func getCardId() -> Swift.String
  public func getCardType() -> Swift.String
  public func getClaims() -> [Swift.String : Swift.String]
}
public enum IdCardError : Swift.Error {
  case cannotFindFaceOnIdCardImage(description: Swift.String)
}
extension IdCardError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension IdCardError : Swift.Equatable {
  public static func == (lhs: P1VerifyIDSchema.IdCardError, rhs: P1VerifyIDSchema.IdCardError) -> Swift.Bool
}
public protocol IdCardWithFace : P1VerifyIDSchema.IdCard {
  var id_face_coordinate_x: Swift.Int! { get }
  var id_face_coordinate_y: Swift.Int! { get }
  var id_face_width: Swift.Int! { get }
  var id_face_height: Swift.Int! { get }
  var frontImage: UIKit.UIImage! { get }
  func setFrontImage(_ value: UIKit.UIImage) throws
  func getFrontImage() -> UIKit.UIImage
  func getFaceCoordinates() -> CoreGraphics.CGRect
}
extension IdCardWithFace {
  public func getFaceCoordinates() -> CoreGraphics.CGRect
  public func getFrontImage() -> UIKit.UIImage
  public func getIdFaceRect() -> CoreGraphics.CGRect?
}
open class Passport : P1VerifyIDSchema.JsonSerializable, P1VerifyIDSchema.IdCardWithFace {
  final public let cardType: Swift.String
  public var cardId: Swift.String
  public var id_face_coordinate_x: Swift.Int!, id_face_coordinate_y: Swift.Int!, id_face_width: Swift.Int!, id_face_height: Swift.Int!
  public var frontImage: UIKit.UIImage! {
    get
  }
  public init(cardId: Swift.String? = nil, firstName: Swift.String, middleName: Swift.String?, lastName: Swift.String, gender: Swift.String, country: Swift.String, nationality: Swift.String, expirationDate: Swift.String, birthDate: Swift.String, idNumber: Swift.String, personalNumber: Swift.String?)
  required convenience public init(dict: [Swift.String : Any]) throws
  public func setFrontImage(_ value: UIKit.UIImage) throws
  public func setFirstName(_ value: Swift.String)
  public func getFirstName() -> Swift.String
  public func setMiddleName(_ value: Swift.String)
  public func getMiddleName() -> Swift.String
  public func setLastName(_ value: Swift.String)
  public func getLastName() -> Swift.String
  public func setGender(_ value: Swift.String)
  public func getGender() -> Swift.String
  public func setCountry(_ value: Swift.String)
  public func getCountry() -> Swift.String
  public func setNationality(_ value: Swift.String)
  public func getNationality() -> Swift.String
  public func setExpirationDate(_ value: Swift.String)
  public func getExpirationDate() -> Swift.String
  public func setBirthDate(_ value: Swift.String)
  public func getBirthDate() -> Swift.String
  public func setIdNumber(_ value: Swift.String)
  public func getIdNumber() -> Swift.String
  public func setPersonalNumber(_ value: Swift.String)
  public func getPersonalNumber() -> Swift.String
  override public func toDictionary() throws -> [Swift.String : Any]
  @objc deinit
  override public init()
}
open class Selfie : P1VerifyIDSchema.JsonSerializable, P1VerifyIDSchema.IdCard {
  public var cardId: Swift.String
  final public let cardType: Swift.String
  public init(cardId: Swift.String? = nil, selfie: UIKit.UIImage)
  required public init(dict: [Swift.String : Any]) throws
  public func setSelfie(_ value: UIKit.UIImage)
  public func getSelfie() -> UIKit.UIImage
  override public func toDictionary() throws -> [Swift.String : Any]
  @objc deinit
  override public init()
}
extension Data {
  public func toString() -> Swift.String
}
extension String {
  public func toData() -> Foundation.Data
}
public enum JsonSerializableError : Swift.Error {
  case missingRequiredInit
  case failedToParseJson(description: Swift.String)
  case invalidJsonString
  case missingRequiredInformationForKey(_: Swift.String)
}
extension JsonSerializableError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension JsonSerializableError : Swift.Equatable {
  public static func == (lhs: P1VerifyIDSchema.JsonSerializableError, rhs: P1VerifyIDSchema.JsonSerializableError) -> Swift.Bool
}
@_hasMissingDesignatedInitializers public class JsonHelper {
  public class func encodeToJson(_ data: Any) throws -> Foundation.Data
  public class func decodeJson(_ jsonData: Foundation.Data) throws -> Any
  @objc deinit
}
public protocol JsonSerializableProtocol {
  init(jsonString: Swift.String) throws
  func toDictionary() throws -> [Swift.String : Any]
  func toJsonString() throws -> Swift.String
}
open class JsonSerializableObject {
  public init()
  required convenience public init(dict: [Swift.String : Any]) throws
  open func toDictionary() throws -> [Swift.String : Any]
  open func toJsonString() throws -> Swift.String
  @objc deinit
}
extension JsonSerializableProtocol where Self : P1VerifyIDSchema.JsonSerializableObject {
  public init(jsonString: Swift.String) throws
}
public typealias JsonSerializable = P1VerifyIDSchema.JsonSerializableObject & P1VerifyIDSchema.JsonSerializableProtocol
extension Mirror {
  public func toDictionary() throws -> [Swift.String : Any]
}
